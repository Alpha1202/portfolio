{"ast":null,"code":"export default {\n  // Display reference cube, useful for orienting the field\n  showCube: false,\n  // '2D' or '3D' particle field\n  dimension: '3D',\n  // 'bounce' or 'passthru'\n  // 'bounce' will make particles behave like balls thrown at a wall when hitting canvas boundaries\n  // 'passthru' particles will disappear after hitting canvas boundaries and be added back into the scene elsewhere\n  boundaryType: 'bounce',\n  // Maximum velocity of particles\n  velocity: 2,\n  // Toggles antialiasing -- must be set during construction, cannot be changed after initial render\n  // Slight performance optimization to set false, although lines will appear more jagged\n  antialias: false,\n  // Min/Max multipliers which constraint how particles move in each direction\n  // The default values here allow for particles to move in completely random x, y, z directions\n  // See the \"Snowfall\" preset for an example of how to use these values\n  direction: {\n    xMin: -1,\n    xMax: 1,\n    yMin: -1,\n    yMax: 1,\n    zMin: -1,\n    zMax: 1\n  },\n  lines: {\n    // 'rainbow' or 'solid' color of lines\n    colorMode: 'solid',\n    // Color of lines if colorMode: 'solid', must be hex color\n    color: '#351CCB',\n    // Transparency of lines\n    transparency: 0.9,\n    // true/false limit the maximum number of line connections per particle\n    limitConnections: false,\n    maxConnections: 0,\n    // Minimum distance needed to draw line between to particles\n    minDistance: 110,\n    // true/false render lines\n    visible: true\n  },\n  particles: {\n    // 'rainbow' or 'solid' color of particles\n    colorMode: 'solid',\n    // Color of lines if colorMode: 'solid', must be hex color\n    color: '#afbfbd',\n    // Transparency of particles\n    transparency: 0.9,\n    // 'square' or 'circle' shape of particles\n    shape: 'circle',\n    // The exact number of particles to render\n    count: 300,\n    // The minimum particle size\n    minSize: 20,\n    // The maximum particle size\n    maxSize: 50,\n    // true/false render particles\n    visible: true\n  },\n\n  /*\n    * The camera rig is comprised of Three.js OrbitControls\n    * Pass any valid OrbitControls properties, consult docs for more info\n    *\n    * https://threejs.org/docs/#examples/controls/OrbitControls\n    */\n  cameraControls: {\n    // Enable or disable all camera interaction (click, drag, touch etc)\n    enabled: f,\n    // Enable or disable smooth dampening of camera movement\n    enableDamping: true,\n    dampingFactor: 0.2,\n    // Enable or disable zooming in/out of camera\n    enableZoom: true,\n    // Enable or disable constant rotation of camera around scene\n    autoRotate: true,\n    // Rotation speed -- higher is faster\n    autoRotateSpeed: 0.3,\n    // If true, camera position will be reset whenever any option changes (including this one)\n    // Useful when turning off autoRotate, the camera will return to FOV where scene fits to canvas\n    resetCameraFlag: false\n  }\n};","map":{"version":3,"sources":["/Users/mac/Desktop/my-portfolio-website/src/components/ParticleConfig.js"],"names":["showCube","dimension","boundaryType","velocity","antialias","direction","xMin","xMax","yMin","yMax","zMin","zMax","lines","colorMode","color","transparency","limitConnections","maxConnections","minDistance","visible","particles","shape","count","minSize","maxSize","cameraControls","enabled","f","enableDamping","dampingFactor","enableZoom","autoRotate","autoRotateSpeed","resetCameraFlag"],"mappings":"AAAA,eAAe;AACX;AACAA,EAAAA,QAAQ,EAAE,KAFC;AAGX;AACAC,EAAAA,SAAS,EAAE,IAJA;AAKX;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,QARH;AASX;AACAC,EAAAA,QAAQ,EAAE,CAVC;AAWX;AACA;AACAC,EAAAA,SAAS,EAAE,KAbA;AAcX;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CAAC,CADE;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,IAAI,EAAE,CAAC,CAHE;AAITC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,IAAI,EAAE,CAAC,CALE;AAMTC,IAAAA,IAAI,EAAE;AANG,GAjBA;AAyBXC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,SAAS,EAAE,OAFN;AAGL;AACAC,IAAAA,KAAK,EAAE,SAJF;AAKL;AACAC,IAAAA,YAAY,EAAE,GANT;AAOL;AACAC,IAAAA,gBAAgB,EAAE,KARb;AASLC,IAAAA,cAAc,EAAE,CATX;AAUL;AACAC,IAAAA,WAAW,EAAE,GAXR;AAYL;AACAC,IAAAA,OAAO,EAAE;AAbJ,GAzBI;AAwCXC,EAAAA,SAAS,EAAE;AACT;AACAP,IAAAA,SAAS,EAAE,OAFF;AAGT;AACAC,IAAAA,KAAK,EAAE,SAJE;AAKT;AACAC,IAAAA,YAAY,EAAE,GANL;AAOT;AACAM,IAAAA,KAAK,EAAE,QARE;AAST;AACAC,IAAAA,KAAK,EAAE,GAVE;AAWT;AACAC,IAAAA,OAAO,EAAE,EAZA;AAaT;AACAC,IAAAA,OAAO,EAAE,EAdA;AAeT;AACAL,IAAAA,OAAO,EAAE;AAhBA,GAxCA;;AA0DX;;;;;;AAMAM,EAAAA,cAAc,EAAE;AACd;AACAC,IAAAA,OAAO,EAAEC,CAFK;AAGd;AACAC,IAAAA,aAAa,EAAE,IAJD;AAKdC,IAAAA,aAAa,EAAE,GALD;AAMd;AACAC,IAAAA,UAAU,EAAE,IAPE;AAQd;AACAC,IAAAA,UAAU,EAAE,IATE;AAUd;AACAC,IAAAA,eAAe,EAAE,GAXH;AAYd;AACA;AACAC,IAAAA,eAAe,EAAE;AAdH;AAhEL,CAAf","sourcesContent":["export default {\n    // Display reference cube, useful for orienting the field\n    showCube: false,\n    // '2D' or '3D' particle field\n    dimension: '3D',\n    // 'bounce' or 'passthru'\n    // 'bounce' will make particles behave like balls thrown at a wall when hitting canvas boundaries\n    // 'passthru' particles will disappear after hitting canvas boundaries and be added back into the scene elsewhere\n    boundaryType: 'bounce',\n    // Maximum velocity of particles\n    velocity: 2,\n    // Toggles antialiasing -- must be set during construction, cannot be changed after initial render\n    // Slight performance optimization to set false, although lines will appear more jagged\n    antialias: false,\n    // Min/Max multipliers which constraint how particles move in each direction\n    // The default values here allow for particles to move in completely random x, y, z directions\n    // See the \"Snowfall\" preset for an example of how to use these values\n    direction: {\n      xMin: -1,\n      xMax: 1,\n      yMin: -1,\n      yMax: 1,\n      zMin: -1,\n      zMax: 1\n    },\n    lines: {\n      // 'rainbow' or 'solid' color of lines\n      colorMode: 'solid',\n      // Color of lines if colorMode: 'solid', must be hex color\n      color: '#351CCB',\n      // Transparency of lines\n      transparency: 0.9,\n      // true/false limit the maximum number of line connections per particle\n      limitConnections: false,\n      maxConnections: 0,\n      // Minimum distance needed to draw line between to particles\n      minDistance: 110,\n      // true/false render lines\n      visible: true\n    },\n    particles: {\n      // 'rainbow' or 'solid' color of particles\n      colorMode: 'solid',\n      // Color of lines if colorMode: 'solid', must be hex color\n      color: '#afbfbd',\n      // Transparency of particles\n      transparency: 0.9,\n      // 'square' or 'circle' shape of particles\n      shape: 'circle',\n      // The exact number of particles to render\n      count: 300,\n      // The minimum particle size\n      minSize: 20,\n      // The maximum particle size\n      maxSize: 50,\n      // true/false render particles\n      visible: true\n    },\n    /*\n      * The camera rig is comprised of Three.js OrbitControls\n      * Pass any valid OrbitControls properties, consult docs for more info\n      *\n      * https://threejs.org/docs/#examples/controls/OrbitControls\n      */\n    cameraControls: {\n      // Enable or disable all camera interaction (click, drag, touch etc)\n      enabled: f,\n      // Enable or disable smooth dampening of camera movement\n      enableDamping: true,\n      dampingFactor: 0.2,\n      // Enable or disable zooming in/out of camera\n      enableZoom: true,\n      // Enable or disable constant rotation of camera around scene\n      autoRotate: true,\n      // Rotation speed -- higher is faster\n      autoRotateSpeed: 0.3,\n      // If true, camera position will be reset whenever any option changes (including this one)\n      // Useful when turning off autoRotate, the camera will return to FOV where scene fits to canvas\n      resetCameraFlag: false\n    }\n  };"]},"metadata":{},"sourceType":"module"}